// [!output PROJECT_NAME].idl : type library source for ActiveX Control project.

// This file will be processed by the MIDL compiler tool to
// produce the type library ([!output PROJECT_NAME].tlb) that will become a resource in
// [!output PROJECT_NAME].ocx.

#include <olectl.h>
#include <idispids.h>

[ uuid([!output LIBID_REGISTRY_FORMAT]), version(1.0),
  helpfile("[!output PROJECT_NAME].hlp"),
  helpstring("[!output PROJECT_NAME] ActiveX Control module"),
  control ]
library [!output LIB_NAME]Lib
{
	importlib(STDOLE_TLB);

	//  Primary dispatch interface for [!output CONTROL_CLASS]

	[ uuid([!output PRIMARY_IID_REGISTRY_FORMAT]),
	  helpstring("Dispatch interface for [!output CONTROL_TYPE_NAME]")]
	dispinterface _D[!output SAFE_PROJECT_NAME]
	{
		properties:
[!if ASYNC_PROPERTY_LOAD]
			[id(DISPID_READYSTATE), readonly] long ReadyState;
[!endif]
		methods:
[!if ABOUT_BOX]

			[id(DISPID_ABOUTBOX)] void AboutBox();
[!endif]
	};

	//  Event dispatch interface for [!output CONTROL_CLASS]

	[ uuid([!output EVENT_IID_REGISTRY_FORMAT]),
	  helpstring("Event interface for [!output CONTROL_TYPE_NAME]") ]
	dispinterface _D[!output SAFE_PROJECT_NAME]Events
	{
		properties:
			//  Event interface has no properties

		methods:
[!if ASYNC_PROPERTY_LOAD]
			[id(DISPID_READYSTATECHANGE)] void ReadyStateChange();
[!endif]
	};

	//  Class information for [!output CONTROL_CLASS]

[!if RUNTIME_LICENSE]
	[ uuid([!output CONTROL_CLSID]), licensed,
[!else]
	[ uuid([!output CONTROL_CLSID]),
[!endif]
	  helpstring("[!output CONTROL_TYPE_NAME]"), control ]
	coclass [!output LIB_NAME]
	{
		[default] dispinterface _D[!output SAFE_PROJECT_NAME];
		[default, source] dispinterface _D[!output SAFE_PROJECT_NAME]Events;
	};

};
